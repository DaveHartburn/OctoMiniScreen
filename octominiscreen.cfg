[settings]
octourl = http://localhost:5000
apikey = 36314241129D4E5A88C19257C6606EA6

# Define screen size
width = 320
height = 240
show_pointer = no
buttons_per_row = 3

# How many seconds before screen saver shows?
screen_save=300

# Allow screen save content from a file. This could be a dynamic value written
# by another process, such as a temperature sensor
screen_save_cont=/tmp/EncTemp

# How often to refresh status in milliseconds. Advise around 3000.
# Low numbers updates the screen quicker at the expense of button responsiveness
status_refresh=3000

# Use a beep to ack button press?
piezo = yes
piezo_pin = 29
# Keep the chirp duration pretty short
piezo_duration = 0.01

# A double screen press can cause problems, especially when waking up from the
# screen saver. Define the click delay in milliseconds. Further clicks during this
# period are ignored
click_delay = 500

# Define buttons below. Each button has a type, label and command. Each button
# needs a unique name. So long as it starts 'button', the rest does not matter
# Type 'toggle' can support multiple labels and commands, split by |
# make sure the number of commands matches the number of labels

# Commands can take the form, GCODE, API calls or URL. All can take multiple commands
# with a ; between. GGODE is just a list of the commands, API calls specify
# url{json payload}.
# Commands can be multi-line providing the following line is indented by a space
# Examples:
# command = GCODE:G90;G28		-- Sends two GCODE commands
# command = GCODE:M104 S190|M104 S0	-- A toggle button that sends two temp commands
# command = API:/api/plugin/psucontrol{"command":"togglePSU"}
#		-- Uses the PSU control plugin to send the payload to the API url
# command = URL:http://localhost/url
#		-- Used for things like the enclosure plugin which has not rest calls
# command = GCODE:G90;
#  G1 X10 Y10 Z10 F100;
#  G91;
#   -- Example of a multiline command

# Buttons are drawn left to right, starting top left working downwards. Make
# sure the text fits!

# Visibilty must be set at 'a - always show', 'p - hide when printing' or
# 'o - hide when octoprint not running'

# GPIO buttons can also be defined. These can be your own external or some 
# screens have 3 by the side. See below the buttons for definition instructions



[button1]
type = static
label = Home all
command = GCODE:G91;G1 Z10 F1200;G90;G28
visible = p

[button2]
type = toggle
label = Corner 2|Corner 3|Corner 4
command = GCODE:G91;G1 Z10 F1200;G90;G1 X190 Y0 F1200;G1 Z0 F1200|
  GCODE:G91;G1 Z10 F1200;G90;G1 X190 Y185 F1200;G1 Z0 F1200|
  GCODE:G91;G1 Z10 F1200;G90;G1 X5 Y185 F1200;G1 Z0 F1200
visible = p

[button3]
type = static
label = Home Z=30
command = GCODE:G90;G1 Z30 F1200;G28 X Y
visible = p

[buttonZplus]
type = static
label = Z+30mm
command = GCODE:G91;G1 Z30 F1200
visible = p

[buttonPlateF]
type = static
label = Plate Forward
command = GCODE:G28 Y; G90; G1 Y200 F1200
visible = p

[button4]
type = static
label = Stepper Off
command = GCODE: M84
visible = p

[button5]
type = static
label = Heat PLA
command = GCODE: M104 S200
visible = p

[button6]
type = static
label = Heat 170
command = GCODE: M104 S170
visible = p

[buttonBed]
type = static
label = Heat to level
command = GCODE: M140 S60;M104 S150
visible = p

[button7]
type = static
label = Cool All
command = GCODE:M104 S0;M140 S0
visible = p

[button8]
type = static
label = Extrude 30
command = GCODE:G91;G1 E30 F200
visible = p

#[button9]
#type = toggle
#label = Webcam Off|Webcam On
#command = API:/api/system/commands/custom/CamOff|API:/api/system/commands/custom/CamOn
#visible = a


[buttonTest]
type = toggle
label = Test button
command = 
visible = a

# GPIO buttons are defined similar to on-screen buttons. The label must start
# 'gpio', any text that follows is for your own reference. Screens seem to 
# require using the pull-up resistor mode (high open, low pressed). If you 
# add your own buttons, wire them the same way.
#
# There is no need for type, only the following two parameters are defined:
# pin - The GPIO pin number, not the GPIO number. i.e. pin3, not GPIO 8
# command - As above with the buttons
# type - static or toggle. Obviously the label does not toggle


# K1 - LEDs on/off
[gpioK1]
pin = 12
type = toggle
command = URL:http://localhost/plugin/enclosure/setIO?status=true&index_id=5&apikey=36314241129D4E5A88C19257C6606EA6|URL:http://localhost/plugin/enclosure/setIO?status=false&index_id=5&apikey=36314241129D4E5A88C19257C6606EA6

# K2 - Power on/off
[gpioK2]
pin = 16
type = static
command = API:/api/plugin/psucontrol{"command":"togglePSU"}

# K3 - Fan on/off
[gpioK3]
pin = 18
type = static
command = GCODE:G117
